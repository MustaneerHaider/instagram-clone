import { getSession } from 'next-auth/react';
import Head from 'next/head';
import Feed from '../components/Feed';
import Header from '../components/Header';
import Modal from '../components/Modal';
import prisma from '../lib/db';
import moment from 'moment-mini';
import { useState } from 'react';

export default function Home({ posts: data }) {
	const [isOpen, setOpen] = useState(false);
	const [posts, setPosts] = useState(data);

	const openModalHandler = () => {
		setOpen(true);
	};

	const closeModalHandler = () => {
		setOpen(false);
	};

	const addPostHandler = postData => {
		setPosts(prevPosts => {
			const newPosts = [...prevPosts];
			newPosts.unshift(postData);
			return newPosts;
		});
	};

	return (
		<div className='bg-gray-50'>
			<Head>
				<title>Instagram Clone</title>
				<meta
					name='description'
					content='Generated by create next app'
				/>
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<Modal
				show={isOpen}
				onCloseModal={closeModalHandler}
				onAddPost={addPostHandler}
			/>

			<Header onOpenModal={openModalHandler} />
			<Feed posts={posts} />
		</div>
	);
}

export async function getServerSideProps(context) {
	const session = await getSession(context);

	const posts = await prisma.post.findMany({
		orderBy: {
			createdAt: 'desc'
		},
		select: {
			id: true,
			caption: true,
			image: true,
			createdAt: true,
			author: {
				select: {
					name: true,
					image: true
				}
			},
			comments: {
				orderBy: {
					createdtAt: 'desc'
				},
				select: {
					id: true,
					comment: true,
					createdtAt: true,
					user: {
						select: {
							name: true,
							image: true
						}
					}
				}
			}
		}
	});

	return {
		props: {
			session,
			posts: posts.map(post => ({
				...post,
				createdAt: moment(post.createdAt).unix(),
				comments: post.comments.map(comment => ({
					...comment,
					createdtAt: moment(comment.createdtAt).unix()
				}))
			}))
		}
	};
}
